/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Tushar
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    private EcoSystem ecoSystem;
    private JFrame mainJFrame;
    private JPanel loginContainer;
    private String userName;
    private String errorMessage;
    private ArrayList<Person> personDirectory;
    private ArrayList<UserAccount> userAccountDirectory;
    private int count = 0;

    public LoginJPanel(EcoSystem ecoSystem, JFrame mainJFrame, JPanel loginContainer) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.mainJFrame = mainJFrame;
        this.loginContainer = loginContainer;
    }

    public static boolean sendMail(String from, String password, String message, String to) {
        String host = "smtp.gmail.com";
        Properties props = System.getProperties();
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", password);
        props.put("mail.smtp.port", 587);
        props.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(props, null);
        MimeMessage mimeMessage = new MimeMessage(session);
        try {
            mimeMessage.setFrom(new InternetAddress(from));
//                InternetAddress[] toAddress = new InternetAddress(to.length);
//                toAddress = new InternetAddress();
            mimeMessage.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            mimeMessage.setSubject("Login Details");
            mimeMessage.setText(message);
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, password);
            transport.sendMessage(mimeMessage, mimeMessage.getRecipients(Message.RecipientType.TO));
//                transport.send(mimeMessage);
            transport.close();
            return true;
        } catch (MessagingException me) {
            me.printStackTrace();
        }

        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSignUpSysAdmin = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtUserName = new javax.swing.JTextField();
        btnForgotPassword = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 1, 18), new java.awt.Color(0, 0, 204))); // NOI18N

        btnSignUpSysAdmin.setText("SignUP as SYSADMIN");
        btnSignUpSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpSysAdminActionPerformed(evt);
            }
        });

        lblPassword.setText("Password");

        btnForgotPassword.setText("Forgot Password");
        btnForgotPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgotPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblUserName.setText("UserName");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnForgotPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnSignUpSysAdmin))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUserName)
                            .addComponent(lblPassword))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(txtPassword))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnForgotPassword))
                .addGap(18, 18, 18)
                .addComponent(btnSignUpSysAdmin)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Tushar\\Documents\\NetBeansProjects\\Final_Project\\Image1.jpg")); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(108, 108, 108)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(143, 143, 143))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        ecoSystem.maintenanceCheck();

        errorMessage = "";
        count = 0;
        String userName = txtUserName.getText().trim();
        String password = txtPassword.getText().trim();

        if (userName.isEmpty() || password.isEmpty()) {
            count = 0;
            errorMessage += "You have left the below mentioned field as blank, Please fill them\n";
            if (userName.isEmpty()) {
                count++;
                errorMessage += count + ". UserName\n";
            }
            if (password.isEmpty()) {
                count++;
                errorMessage += count + ". Password\n";
            }
        }

        if (count == 0) {
            UserAccount userAccount = ecoSystem.getUserAccountDirectory().authenticateUser(userName, password);
            Enterprise inEnterprise = null;
            Organization inOrganization = null;

            if (userAccount == null) {
                for (Enterprise enterprise : ecoSystem.getEnterpriseList()) {
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if (userAccount == null) {
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                            if (userAccount != null) {
                                inEnterprise = enterprise;
                                inOrganization = organization;
                                break;
                            }
                        }
                    } else {
                        inEnterprise = enterprise;
                        break;
                    }
                    if (inOrganization != null) {
                        break;
                    }
                }
            }
            if (userAccount == null) {

                for (Network network : ecoSystem.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        if (userAccount == null) {
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount != null) {
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                    break;
                                }
                            }
                        } else {
                            inEnterprise = enterprise;
                            break;
                        }
                        if (inOrganization != null) {
                            break;
                        }
                    }
                    if (inEnterprise != null) {
                        break;
                    }
                }
            }
            if (userAccount == null) {
                JOptionPane.showMessageDialog(null, "Invalid Credentails!");
            } else {
                CardLayout layout = (CardLayout) loginContainer.getLayout();
                loginContainer.add("workArea", userAccount.getRole().createWorkArea(loginContainer, userAccount, inOrganization, inEnterprise, ecoSystem));
                layout.next(loginContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, errorMessage);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnForgotPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgotPasswordActionPerformed
        userName = txtUserName.getText();
        String emailAddress = "";
        String password = "";
        String name = "";
        int count = 0;
        if (txtUserName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter UserName");
        } else {
            for (UserAccount userAccount : ecoSystem.getUserAccountDirectory().getUserAccountList()) {
                if (userName.equalsIgnoreCase(userAccount.getUserName())) {
                    emailAddress = userAccount.getPerson().getEmailAddress();
                    password = userAccount.getPassword();
                    name = userAccount.getPerson().getFirstName();
                    count++;
                    break;
                }
            }
            for (Enterprise enterprise : ecoSystem.getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    if (userName.equalsIgnoreCase(userAccount.getUserName())) {
                        emailAddress = userAccount.getPerson().getEmailAddress();
                        password = userAccount.getPassword();
                        name = userAccount.getPerson().getFirstName();
                        count++;
                        break;
                    }
                }
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount userAccount : org.getUserAccountDirectory().getUserAccountList()) {
                        if (userName.equalsIgnoreCase(userAccount.getUserName())) {
                            emailAddress = userAccount.getPerson().getEmailAddress();
                            password = userAccount.getPassword();
                            name = userAccount.getPerson().getFirstName();
                            count++;
                            break;
                        }
                    }
                }
            }
            for (Network network : ecoSystem.getNetworkList()) {
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (userName.equalsIgnoreCase(userAccount.getUserName())) {
                            emailAddress = userAccount.getPerson().getEmailAddress();

                            password = userAccount.getPassword();
                            name = userAccount.getPerson().getFirstName();
                            count++;
                            break;
                        }
                    }
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for (UserAccount userAccount : org.getUserAccountDirectory().getUserAccountList()) {
                            if (userName.equalsIgnoreCase(userAccount.getUserName())) {
                                emailAddress = userAccount.getPerson().getEmailAddress();
                                password = userAccount.getPassword();
                                name = userAccount.getPerson().getFirstName();
                                count++;
                                break;
                            }
                        }
                    }
                }
            }
            if (count != 0) {
                if (LoginJPanel.sendMail("tusharkale52@gmail.com",
                        "tussh122",
                        "Hello " + name + ",\nYour Login Details are:\nUserName: " + userName + "\nPassword: " + password,
                        emailAddress)) {
                    JOptionPane.showMessageDialog(null, "Password has been sent to your Email Address");
                }
            } else {
                JOptionPane.showMessageDialog(null, "The entered username doesnot exists!!!");
            }
        }
    }//GEN-LAST:event_btnForgotPasswordActionPerformed

    private void btnSignUpSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpSysAdminActionPerformed

        personDirectory = ecoSystem.getPersonDirectory().getPersonList();
        userAccountDirectory = ecoSystem.getUserAccountDirectory().getUserAccountList();
        AuthenticateSysAdminJDialog asajd = new AuthenticateSysAdminJDialog(mainJFrame, true, ecoSystem, personDirectory, userAccountDirectory);
        asajd.setVisible(true);
        asajd.setTitle("Autheticate");
        asajd.setDefaultCloseOperation(AuthenticateSysAdminJDialog.DISPOSE_ON_CLOSE);


    }//GEN-LAST:event_btnSignUpSysAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnForgotPassword;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignUpSysAdmin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

}
