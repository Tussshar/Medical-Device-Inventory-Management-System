/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SupplierWorkArea;

import Business.Device;
import Business.Person.Supplier;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tushar
 */
public class ManageSelectedDeviceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSelectedDeviceJPanell
     */
    private JPanel userProcessContainer;
    private Device selectedDevice;
    private Supplier supplier;
    private ArrayList<Device> deviceCatalog; 

    public ManageSelectedDeviceJPanel(JPanel userProcessContainer, Device device, Supplier supplier) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        selectedDevice = device;
        this.supplier = supplier;
        deviceCatalog = new ArrayList<>();
        
        populateDeviceTable();
        populateDeviceTable();
    }

    private void populateMessage(int count){
        txtMessage.setText(count+" devices with device name as "+selectedDevice.getDeviceName()+" are listed below");
    }
    private void populateDeviceTable(){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel)tblDevice.getModel();
        defaultTableModel.setRowCount(0);
        
        if(!deviceCatalog.isEmpty()){
            deviceCatalog.removeAll(deviceCatalog);
        }
        
        
        for(Device device: supplier.getDeviceCatalog().getDeviceList()){
            if(device.getDeviceName().equalsIgnoreCase(selectedDevice.getDeviceName())){
                if(device.getInStock().equalsIgnoreCase("YES")){
                    deviceCatalog.add(device);
                }
            }
        }
        
        populateMessage(deviceCatalog.size());
        for(Device device: deviceCatalog){
            Object[] row = new Object[4];

            row[0] = device;
            row[1] = device.getUniqueDeviceIdentifier();
            row[2] = device.getCompanyName();
            row[3] = device.getUnitPrice();
            
            defaultTableModel.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDeleteADevice = new javax.swing.JButton();
        tblDeviceScrollPane = new javax.swing.JScrollPane();
        tblDevice = new javax.swing.JTable();
        lblManageDeviceCatalog = new javax.swing.JLabel();
        btnViewDeviceDetail = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();

        btnDeleteADevice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDeleteADevice.setText("Delete a Device");
        btnDeleteADevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteADeviceActionPerformed(evt);
            }
        });

        tblDeviceScrollPane.setBackground(new java.awt.Color(0, 0, 0));

        tblDevice.setBackground(new java.awt.Color(255, 153, 0));
        tblDevice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tblDevice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device Name", "Unique Device ID", "Company Name", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDeviceScrollPane.setViewportView(tblDevice);
        if (tblDevice.getColumnModel().getColumnCount() > 0) {
            tblDevice.getColumnModel().getColumn(0).setResizable(false);
            tblDevice.getColumnModel().getColumn(1).setResizable(false);
            tblDevice.getColumnModel().getColumn(2).setResizable(false);
            tblDevice.getColumnModel().getColumn(3).setResizable(false);
        }

        lblManageDeviceCatalog.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblManageDeviceCatalog.setForeground(new java.awt.Color(102, 204, 255));
        lblManageDeviceCatalog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageDeviceCatalog.setText("Manage Selected Device");

        btnViewDeviceDetail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewDeviceDetail.setText("View Device Detail");
        btnViewDeviceDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDeviceDetailActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtMessage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(btnBack)
                .addContainerGap(788, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDeleteADevice, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewDeviceDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblManageDeviceCatalog)
                        .addGap(374, 374, 374))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnRefresh)
                                .addComponent(tblDeviceScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(lblManageDeviceCatalog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addGap(18, 18, 18)
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tblDeviceScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteADevice)
                    .addComponent(btnViewDeviceDetail))
                .addGap(64, 64, 64)
                .addComponent(btnBack)
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteADeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteADeviceActionPerformed
        int selectedRow = tblDevice.getSelectedRow();
        if (selectedRow >= 0) {
            Device device = (Device) tblDevice.getValueAt(selectedRow, 0);
            supplier.getDeviceCatalog().removeProduct(device);
            populateDeviceTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnDeleteADeviceActionPerformed

    private void btnViewDeviceDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDeviceDetailActionPerformed
        int selectedRow = tblDevice.getSelectedRow();
        if (selectedRow >= 0) {
            Device device = (Device) tblDevice.getValueAt(selectedRow, 0);
            ViewDeviceDetailJPanel vddjp = new ViewDeviceDetailJPanel(userProcessContainer, device);
            userProcessContainer.add("View Device Detail JPanel",vddjp);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnViewDeviceDetailActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateDeviceTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteADevice;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewDeviceDetail;
    private javax.swing.JLabel lblManageDeviceCatalog;
    private javax.swing.JTable tblDevice;
    private javax.swing.JScrollPane tblDeviceScrollPane;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
