/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Person.Supplier;
import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.SupplierWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tushar
 */
public class ManageWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    public ManageWorkRequestJPanel(JPanel userProcessContainer, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        
        populateSupplierPendingWorkRequest();
        populateSupplierRequestHistory();
    }

    private void populateSupplierPendingWorkRequest(){
        DefaultTableModel defaultTableModel = (DefaultTableModel)tblSupplierPendingWorkRequest.getModel();
        defaultTableModel.setRowCount(0);
        
        for(WorkRequest workRequest : ecoSystem.getWorkQueue().getWorkRequestList()){
            
            if(workRequest instanceof SupplierWorkRequest){
                SupplierWorkRequest request = (SupplierWorkRequest)workRequest;
                
                if(request.getStatus().equalsIgnoreCase(WorkRequest.TypeOfStatus.Pending.getValue())){
                    
                    Object[] row = new Object[4];
                    
                    row[0] = request;
                    row[1] = request.getSupplier();
                    row[2] = request.getMessage();
                    row[3] = request.getRequestDate();
                    
                    defaultTableModel.addRow(row);
                }
            }
        }
    }
    
    private void populateSupplierRequestHistory(){
        DefaultTableModel defaultTableModel = (DefaultTableModel)tblSupplierRequestHistory.getModel();
        defaultTableModel.setRowCount(0);
        
        for(WorkRequest workRequest : ecoSystem.getWorkQueue().getWorkRequestList()){
            
            if(workRequest instanceof SupplierWorkRequest){
                SupplierWorkRequest request = (SupplierWorkRequest)workRequest;
                
                if(request.getStatus().equalsIgnoreCase(WorkRequest.TypeOfStatus.Completed.getValue())){
                    
                    Object[] row = new Object[4];
                    
                    row[0] = request;
                    row[1] = request.getSupplier();
                    row[2] = request.getMessage();
                    row[3] = request.getTestResults();
                    
                    defaultTableModel.addRow(row);
                }
            }
        }
    }
    
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        tbpWorkRequest = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblSupplier = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplierPendingWorkRequest = new javax.swing.JTable();
        btnRefreshSupplier = new javax.swing.JButton();
        btnPendingSupplierApprove = new javax.swing.JButton();
        btnPendingSupplierReject = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupplierRequestHistory = new javax.swing.JTable();
        lblSupplierPendingRequests = new javax.swing.JLabel();
        lblSupplierRequestHistory = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1112, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        lblSupplier.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSupplier.setForeground(new java.awt.Color(102, 204, 255));
        lblSupplier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSupplier.setText("Request from Supplier to Enroll");

        tblSupplierPendingWorkRequest.setBackground(new java.awt.Color(255, 153, 0));
        tblSupplierPendingWorkRequest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tblSupplierPendingWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Supplier", "Enterprise", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSupplierPendingWorkRequest);
        if (tblSupplierPendingWorkRequest.getColumnModel().getColumnCount() > 0) {
            tblSupplierPendingWorkRequest.getColumnModel().getColumn(0).setResizable(false);
            tblSupplierPendingWorkRequest.getColumnModel().getColumn(1).setResizable(false);
            tblSupplierPendingWorkRequest.getColumnModel().getColumn(2).setResizable(false);
            tblSupplierPendingWorkRequest.getColumnModel().getColumn(3).setResizable(false);
        }

        btnRefreshSupplier.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefreshSupplier.setText("Refresh");
        btnRefreshSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshSupplierActionPerformed(evt);
            }
        });

        btnPendingSupplierApprove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPendingSupplierApprove.setText("Approve");
        btnPendingSupplierApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendingSupplierApproveActionPerformed(evt);
            }
        });

        btnPendingSupplierReject.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPendingSupplierReject.setText("Reject");
        btnPendingSupplierReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendingSupplierRejectActionPerformed(evt);
            }
        });

        tblSupplierRequestHistory.setBackground(new java.awt.Color(255, 153, 0));
        tblSupplierRequestHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Supplier", "Enterprise", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSupplierRequestHistory);
        if (tblSupplierRequestHistory.getColumnModel().getColumnCount() > 0) {
            tblSupplierRequestHistory.getColumnModel().getColumn(0).setResizable(false);
            tblSupplierRequestHistory.getColumnModel().getColumn(1).setResizable(false);
            tblSupplierRequestHistory.getColumnModel().getColumn(2).setResizable(false);
            tblSupplierRequestHistory.getColumnModel().getColumn(3).setResizable(false);
        }

        lblSupplierPendingRequests.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSupplierPendingRequests.setForeground(new java.awt.Color(102, 204, 255));
        lblSupplierPendingRequests.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSupplierPendingRequests.setText("Pending Requests");

        lblSupplierRequestHistory.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSupplierRequestHistory.setForeground(new java.awt.Color(102, 204, 255));
        lblSupplierRequestHistory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSupplierRequestHistory.setText("Request History");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSupplierRequestHistory)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblSupplierPendingRequests)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRefreshSupplier))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblSupplier)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 875, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(btnBack))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(btnPendingSupplierApprove)
                        .addGap(56, 56, 56)
                        .addComponent(btnPendingSupplierReject)))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSupplier)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSupplierPendingRequests)
                    .addComponent(btnRefreshSupplier))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPendingSupplierApprove)
                    .addComponent(btnPendingSupplierReject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSupplierRequestHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        tbpWorkRequest.addTab("Supplier Request", jPanel1);

        add(tbpWorkRequest);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPendingSupplierRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendingSupplierRejectActionPerformed

        int selectedRow = tblSupplierPendingWorkRequest.getSelectedRow();

        if(selectedRow >= 0){
            SupplierWorkRequest swr = (SupplierWorkRequest)tblSupplierPendingWorkRequest.getValueAt(selectedRow, 0);

            Supplier s = (Supplier)swr.getSupplier().getPerson();

            s.setIsEnrolled(Supplier.EnrollmentStatus.NO.getStatus());

            swr.setResolveDate(new Date());
            swr.setStatus(WorkRequest.TypeOfStatus.Completed.getValue());
            swr.setTestResults(WorkRequest.TypeOfResult.Reject.getValue());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!!!");
        }
    }//GEN-LAST:event_btnPendingSupplierRejectActionPerformed

    private void btnPendingSupplierApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendingSupplierApproveActionPerformed

        int selectedRow = tblSupplierPendingWorkRequest.getSelectedRow();

        if(selectedRow >= 0){
            SupplierWorkRequest swr = (SupplierWorkRequest)tblSupplierPendingWorkRequest.getValueAt(selectedRow, 0);

            Supplier s = (Supplier)swr.getSupplier().getPerson();

            s.setIsEnrolled(Supplier.EnrollmentStatus.YES.getStatus());

            swr.setResolveDate(new Date());
            swr.setStatus(WorkRequest.TypeOfStatus.Completed.getValue());
            swr.setTestResults(WorkRequest.TypeOfResult.Approve.getValue());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!!!");
        }
        populateSupplierPendingWorkRequest();
        populateSupplierRequestHistory();
    }//GEN-LAST:event_btnPendingSupplierApproveActionPerformed

    private void btnRefreshSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshSupplierActionPerformed
        populateSupplierPendingWorkRequest();
        populateSupplierRequestHistory();
    }//GEN-LAST:event_btnRefreshSupplierActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPendingSupplierApprove;
    private javax.swing.JButton btnPendingSupplierReject;
    private javax.swing.JButton btnRefreshSupplier;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JLabel lblSupplierPendingRequests;
    private javax.swing.JLabel lblSupplierRequestHistory;
    private javax.swing.JTable tblSupplierPendingWorkRequest;
    private javax.swing.JTable tblSupplierRequestHistory;
    private javax.swing.JTabbedPane tbpWorkRequest;
    // End of variables declaration//GEN-END:variables
}
