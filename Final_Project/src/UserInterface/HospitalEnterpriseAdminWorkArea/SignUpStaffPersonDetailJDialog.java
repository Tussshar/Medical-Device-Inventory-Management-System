/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalEnterpriseAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import UserInterface.*;
import java.util.ArrayList;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Tushar
 */
public class SignUpStaffPersonDetailJDialog extends javax.swing.JDialog {

    /**
     * Creates new form SignUpPersonDetailJDialog
     */
    private JFrame mainJFrame;
    private EcoSystem ecoSystem;
    private Organization organization;
    private ArrayList<Person> personDirectory;
    private Role role;
    private String firstName;
    private String lastName;
    private String streetName;
    private String apartment;
    private String city;
    private String state;
    private String zipCode;
    private String phoneNumber;
    private String emailAddress;
//    private int check = 0;
    private String errorMessage;
    private int count;
//    private int checkZipCode = 0;
//    private int checkPhoneNumber = 0;
    private int checkEmailAddress;
    private boolean validPhoneNumber;
    private boolean validZipCode;
    private int checkDuplicateEmailAddress;
    private Person person;

    public SignUpStaffPersonDetailJDialog(JFrame mainJFrame, boolean modal, Organization organization, EcoSystem ecoSystem, ArrayList<Person> personDirectory, Role role) {
        //super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Person Detail Dialog");
        this.mainJFrame = mainJFrame;
        this.ecoSystem = ecoSystem;
        this.organization = organization;
        this.personDirectory = personDirectory;
        this.role = role;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblStreetName = new javax.swing.JLabel();
        txtStreetName = new javax.swing.JTextField();
        lblPersonDetail = new javax.swing.JLabel();
        lblApartment = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        txtApartment = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblPhoneNumber = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        lblEmailAddress = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblFirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFirstName.setText("First Name");

        txtFirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLastName.setText("Last Name");

        txtLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblStreetName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStreetName.setText("Street Name");

        txtStreetName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblPersonDetail.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPersonDetail.setForeground(new java.awt.Color(102, 153, 255));
        lblPersonDetail.setText("Please Enter Your Details");

        lblApartment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblApartment.setText("Apartment");

        lblZipCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblZipCode.setText("Zip Code");

        lblCity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCity.setText("City");

        lblState.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblState.setText("State");

        txtApartment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtCity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtState.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtZipCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnNext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNext.setText("Next>>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPhoneNumber.setText("Phone Number");

        txtPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblEmailAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmailAddress.setText("EmailAddress");

        txtEmailAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblPersonDetail)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblLastName)
                                .addComponent(lblFirstName)
                                .addComponent(lblStreetName)
                                .addComponent(lblApartment)
                                .addComponent(lblZipCode)
                                .addComponent(lblCity)
                                .addComponent(lblState)
                                .addComponent(lblPhoneNumber)
                                .addComponent(lblEmailAddress))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFirstName)
                                .addComponent(txtLastName)
                                .addComponent(txtStreetName)
                                .addComponent(txtApartment)
                                .addComponent(txtCity)
                                .addComponent(txtState)
                                .addComponent(txtZipCode)
                                .addComponent(txtPhoneNumber)
                                .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblPersonDetail)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStreetName)
                    .addComponent(txtStreetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApartment)
                    .addComponent(txtApartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipCode)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNumber)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAddress)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnNext))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        count = 0;
        errorMessage = "";
        validPhoneNumber = true;
        validZipCode = true;
        checkDuplicateEmailAddress = 0;
        checkEmailAddress = 0;
        firstName = txtFirstName.getText().trim();
        lastName = txtLastName.getText().trim();
        streetName = txtStreetName.getText().trim();
        apartment = txtApartment.getText().trim();
        city = txtCity.getText().trim();
        state = txtState.getText().trim();
        zipCode = txtZipCode.getText().trim();
        phoneNumber = txtPhoneNumber.getText().trim();
        emailAddress = txtEmailAddress.getText();

        /*
         Validations:
         1. Check if all the fields are empty or not.
         3. Check if Phone Number and ZipCode is negative or not.
         4. Check if Phone Number and Zip Code are valid or not.
         5. Check if length of ZipCode is 5 and that of Phone Number is 10.
         6. Validate Email Address
         */
        if (firstName.isEmpty() || lastName.isEmpty() || streetName.isEmpty() || apartment.isEmpty() || city.isEmpty() || state.isEmpty() || zipCode.isEmpty() || phoneNumber.isEmpty() || emailAddress.isEmpty()) {
            errorMessage += "You have left the below mentioned field as blank, Please fill them \n";
            if (firstName.isEmpty()) {
                count++;
                errorMessage += count + ". First Name\n";
            }
            if (lastName.isEmpty()) {
                count++;
                errorMessage += count + ". Last Name\n";
            }
            if (streetName.isEmpty()) {
                count++;
                errorMessage += count + ". Street Name\n";
            }
            if (apartment.isEmpty()) {
                count++;
                errorMessage += count + ". Apartment\n";
            }
            if (city.isEmpty()) {
                count++;
                errorMessage += count + ". City\n";
            }
            if (state.isEmpty()) {
                count++;
                errorMessage += count + ". State\n";
            }
            if (zipCode.isEmpty()) {
                count++;
                validZipCode = false;
                errorMessage += count + ". ZipCode\n";
            } else if (!zipCode.matches("[0-9]+")) {
                count++;
                validZipCode = false;
            }

            if (phoneNumber.isEmpty()) {
                count++;
                validPhoneNumber = false;
                errorMessage += count + ". Phone Number\n";
            } else if (!phoneNumber.matches("[0-9]+")) {
                count++;
                validPhoneNumber = false;
            }
            if (emailAddress.isEmpty()) {
                count++;
                errorMessage += count + ". Email Address\n";
            }
        }

        if (validZipCode) {
            if (zipCode.length() != 5) {
                count++;
                errorMessage += "Length of ZipCode should be 5\n";
            }
        } else {
            if (!zipCode.isEmpty()) {
                count++;
                errorMessage += "Invalid character in ZipCode, ZipCode should contain only number\n";
            }
        }

        if (validPhoneNumber) {
            if (phoneNumber.length() != 10) {
                count++;
                errorMessage += "Length of Phone Number Should be 10\n";
            }
        } else {
            if (!phoneNumber.isEmpty()) {
                count++;
                errorMessage += "Invalid character in Phone Number, Phone Number should contain only number\n";
            }
        }

        try {
            InternetAddress emailID = new InternetAddress(emailAddress);
            emailID.validate();
        } catch (AddressException addressException) {
            count++;
            checkEmailAddress++;
        }

        if (checkEmailAddress != 0) {
            count++;
            errorMessage += "Inavalid Email Address\n";
        }
        if (count == 0) {
            try {
                for (Person person : ecoSystem.getPersonDirectory().getPersonList()) {
                    if (emailAddress.equals(person.getEmailAddress())) {
                        checkDuplicateEmailAddress++;
                        return;
                    }
                }
                if (checkDuplicateEmailAddress == 0) {
                    for (Network network : ecoSystem.getNetworkList()) {
                        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                            for (Person person : enterprise.getPersonDirectory().getPersonList()) {
                                if (emailAddress.equals(person.getEmailAddress())) {
                                    checkDuplicateEmailAddress++;
                                    return;
                                }
                            }
                            if (checkDuplicateEmailAddress == 0) {
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    for (Person person : organization.getPersonDirectory().getPersonList()) {
                                        if (emailAddress.equals(person.getEmailAddress())) {
                                            checkDuplicateEmailAddress++;
                                            return;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } catch (NullPointerException nullPointerException) {
            }

            if (checkDuplicateEmailAddress == 0) {
                person = ecoSystem.getPersonDirectory().createAndAddStaffPerson(firstName, lastName, streetName, apartment, city, state, zipCode, phoneNumber, emailAddress, organization);
                personDirectory.add(person);
                
                dispose();
            } else {
                JOptionPane.showMessageDialog(null, "The Email Address alredy exist, Please enter a new one");
            }

        } else {
            JOptionPane.showMessageDialog(null, errorMessage);
        }

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpStaffPersonDetailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpStaffPersonDetailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpStaffPersonDetailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpStaffPersonDetailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SignUpStaffPersonDetailJDialog dialog = new SignUpStaffPersonDetailJDialog(mainJFrame, true, organization, ecoSystem, personDirectory, role);

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel lblApartment;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPersonDetail;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreetName;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTextField txtApartment;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreetName;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
